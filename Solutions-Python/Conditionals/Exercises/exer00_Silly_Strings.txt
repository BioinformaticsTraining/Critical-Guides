"""
This is a rather silly version of the first Conditional Exercise.

I forgot, or did not realise, that in worked with tuple, lists etc.!!

To use a String was interesting, but stupid.

I keep this solution because it amuses me.

I remove it from the tutorial.

*************************************************
ORIGINAL COMMENTS:
==================

    This exercise will have a much more natural solution when
    <b>Repetition</b> of <b>Code Blocks</b> have been discussed in the next
    <b>Section</b>. This code is a bit awkward I feel.<br><br>
    
    Answering a <b>Y/N</b> question is a common requirement.
    I intend to develop this code into something useful
    as the tutorial proceeds.<br><br>
    
    With regard to the current solution, note the following:<br><br>
    
    <ul>
      <li>
        The strings of <b>Valid YES</b> and <b>NO</b>
        responses were entirely upper case.<br><br>
        
        It has to be neater to allow mixed
        case responses by "<b>upper casing</b>"
        the <b>Response String</b> rather than
        including every combination of upper
        and lower case "<b>Valid Answer</b>"
        in these <b>Strings</b>.
      </li><br>
      <li>
        Each <b>Valid Response</b> was enclosed by '<b>-</b>'
        characters. The response itself was also
        similarly encased.<br><br>
        
        This was to avoid matches with partial
        correct responses. For example:<br><br>
        
        <span class="code">'A' in Valid_YES</span>
        is (incorrectly) <b>True</b>!!!, but<br><br>
        
        <span class="code">'-A-' in Valid_YES</span>
        is (correctly) <b>False</b>.
      </li><br>
      <li>
        The input command is a bit of a monster!
        Maybe it would have been clearer not to
        use a single command?<br><br>
        
        For exactly the same effect:<br><br>
        
        <span class="code">Response = input("Today is a splendid day. Do you agree? ")<br>
        Response = Response.upper()<br>
        Response = '-' + Response + '-'
        </span><br><br>
        
        might have been easier to read?
     </li>
   </ul><br>
   
   And now! Admission time. As I hope you
   will have spotted for yourselves, there
   is a much cleaner way to code this problem.<br><br>
   
   The <b>Keyword</b> "<b>in</b>" works on <b>lists</b> and <b>tuples</b>
   as well as <b>Strings</b>.<br><br>
   
   Had I represented the <b>Valid Answers</b>
   as elements of a <b>tuple</b>, rather than
   hacking them all together as a single string,
   there would have been no need for all the nonsense
   with enclosing everything with '<b>-</b>'s!<br><br>
   
   The improved code sections would be:<br><br>
   
   <span class=code>
   Valid_YES = ('Y','YES','AFFIRMATIVE','QUITE','ABSOLUTELY')<br>
              Valid_NO  = ('N','NO','NEGATIVE','NEVER','I BEG TO DIFFER')<br>
             
              &emsp;&emsp;&emsp;&emsp;&emsp;...<br>
              
              Response = input("Would you agree<br>
              that today is a splendid day? ").upper()
              </span><br><br>
              
              This is a very much better solution,
              but I will stick with my original
              strangled <b>String</b> attempt. I have
              grown rather fond of it now.<br><br>
              
      My initial answer for this exercise is in
      <a href="../Solutions-Python/Conditionals/Exercises/exer00.py"
       target="_blank">this file</a>.<br><br>
 
      The improved "tuple" answer for this exercise is in
      <a href="../Solutions-Python/Conditionals/Exercises/exer00-tuple.py"
       target="_blank">this file</a>.<br><br>

      Some example output to prove it worked.<br><br>
      
      <img src="Images/exercise_cond00.png"
           alt="Fiddle!"
           class="centimg"
           style="background:White;
           border-style: solid;
           border-color: red;
           border-width: 2px;"><br>

*************************************************
"""

#
# Pseudo-Code:
# ============
# 
# Define acceptable Uppercase Values for Yes and No
#
# Ask the Question, save the response as Upper Case
#
# Respond appropriately according to the Value of the Response
#

# Construct strings of Valid uppercase Y/N responses
# Each response bracketed by '-'s to avoid partial matches

Valid_YES = "-Y-YES-AFFIRMATIVE-QUITE-ABSOLUTELY-"
Valid_NO  = "-N-NO-NEGATIVE-NEVER-I BEG TO DIFFER-"

# Ask Question and make response upper case
# Bracket upper case respose with '-'s

Response = '-' + input("Would you agree that today is a splendid day? ").upper() + '-'

# Check response and react appropriately

if   Response in Valid_YES:
    print("So very glad you agree dear chap!")
elif  Response in Valid_NO:
    print("I am mortified that you cannot see the splendour that surrounds thee!")
else:
    print("You answer neither Yes not No? Maybe you cannot make your mind up?")

