/* CSS Definitions */

/* ############################################## --
 Class definitions.
 https://www.w3schools.com/html/html_css.asp
-- ############################################## */

/* Text justification for all p, div, h2, h3 */

p {
    text-align: justify;
    text-justify: inter-word;
    margin-left: 15px; margin-right: 15px;
}

div {
    margin-left: 15px; margin-right: 15px;
}

h2 {
    text-align: justify;
    text-justify: inter-word;
    margin-left: 15px; margin-right: 15px;
}

h3 {
    text-align: justify;
    text-justify: inter-word;
    margin-left: 15px; margin-right: 15px;
}

/* p with no left margin (for lists?) */

p.smarg {
    text-align: justify;
    text-justify: inter-word;
    margin-right: 15px;
}

/* p for Exercise Commands  */

p.command {
    background-color: Black; color: White;
    font-family: courier; font-size: 22px; font-weight: bold;
    position: relative; left: 20px;
    width: 450px;   
}

/* p for medium Exercise Commands  */

p.mcommand {
    background-color: Black; color: White;
    font-family: courier; font-size: 12px; font-weight: bold;
    position: relative; left: 20px;
    width: 700px;   
}

/* p for Long Exercise Commands  */

p.lcommand {
    background-color: Black; color: White;
    font-family: courier; font-size: 12px; font-weight: bold;
    position: relative; left: 20px;
    width: 750px;   
}

/* p for Hints  */

p.hint {
    background-color: Lime; color: DarkSlateGray;
    width: 750px;   
}

/* div for blocks of rambling text */

div.ramble {
    background-color: Moccasin; border-style: solid;
    width: 800px;
}

/* div for Suggestions */

div.suggestion {
    background-color: PeachPuff;
    border-style: solid;
    width: 800px;
}

/* div for Exercise Checkpoints */

div.checkpoint {
    background-color: AntiqueWhite;
    border-style: solid;
    width: 800px
}

/* span for GUI Equivalents Summary*/

span.guisum {
    display: inline-block;
    width: 200px;
    background-color: DarkGray; 
}

/* span for Comment Summary*/

span.comsum {
    display: inline-block;
    width: 200px;
    background-color: LightGray; 
}

/* span for Command text*/

span.comtxt {
    display: inline-block;
    background-color: Black; color: White;
    font-family: courier; font-size: 16px; font-style: bold;
}

/* span for Quotes*/

span.quote {
    font-style: italic;
}

/* details for Exercise Comments */

details.comment {
    background-color: auto;
    width: 400px;
}

/* details for GUI Equivalents */

details.gui {
    background-color:LavenderBlush;
    width: 906px;
}

/* details for Videos */

details.video {
    background-color:Plum;
    width: 500px;
}

/* class for Major Sections */

.msect {
    background: LavenderBlush; border-right: 106px;
    width: 800px;
}

/* class for Sections List*/

.lsect {
    background: LavenderBlush; padding: 50px;
    width: 856px;
}

/* class for Exercise New Commands */

.new_command {
    background-color: LightGreen; border-style: double;
    width: 800px;
}

/* ############################################## --
 Code for grid containers. Copied from:
 https://www.w3schools.com/css/css_grid_container.asp
 My understanding? - think I get this one ... but!
 Pity number of columns is fixed?? I choose 3 for now.
 Do I have to repeat for different column counts?

 Mabe I can override with a local grid-template-columns?
 Experiment later.
-- ############################################## */

.grid-container {
  justify-content: space-evenly;
  display: grid;  align-content: start; grid-gap: 5px;
  grid-template-columns: auto auto auto;
  background-color: Yellow;
}

.grid-container > div {
  background-color: Yellow;
  text-align: center; font-size: 14px;
}

/* ############################################## --
 Code for grid containers with two columns.
-- ############################################## */

.grid-container2 {
  justify-content: space-evenly;
  display: grid;  align-content: start; grid-gap: 5px;
  grid-template-columns: auto auto;
  background-color: Yellow;
}

.grid-container2 > div {
  background-color: Yellow;
  text-align: center; font-size: 14px;
}

/* ############################################## --
 Code for grid containers. END.
-- ############################################## */

/* ############################################## --
 Code for popups. Copied wholesale from:
 https://www.w3schools.com/howto/howto_js_popup.asp
 My understanding? - Partial :-(
 
 Correction!! Not copied wholesale. The w3 version
 only works if you only ever want 1 popup???
 a second invocation "pops" the first popup?
 I do not fully understand why. It should work.
 Seems one cannot overwrite the first popup dwfinition?
 Anyway, solution is to pass the popup as a parameter
 having made each popup with a new id.
 I WIN! At the cost of hours. During which I learned some stuff
 including that this webbie thing is a bloody messy business.
-- ############################################## */
 
 /* Popup container - can be anything you want */
.popup {
  position: relative; display: inline-block; cursor: pointer;
  -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none;
  user-select: none;
}

/* The actual popup */
.popup .popuptext {
  visibility: hidden; width: 160px;
  color: SlateGray; background-color: Wheat;
  text-align: center; border-radius: 6px; padding: 8px 0; position: absolute;
  z-index: 1; bottom: 75%; left: 60%; margin-left: 5px;
}

/* Popup arrow */
.popup .popuptext::after {
  content: ""; position: absolute; top: 100%; left: 50%; margin-left: -5px;
  border-width: 5px; border-style: solid; border-color: #555 transparent transparent transparent;
}

/* Toggle this class - hide and show the popup */
.popup .show {
  visibility: visible; -webkit-animation: fadeIn 1s; animation: fadeIn 1s;
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
  from {opacity: 0;} to {opacity: 1;}
}

@keyframes fadeIn {
  from {opacity: 0;} to {opacity:1 ;}
}
 
/* ############################################## --
 Code for popups. See Javascript at end of body.
-- ############################################## */
 
/* ############################################## --
 Code for buttons on an image. Copied wholesale from:
 https://www.w3schools.com/howto/howto_css_button_on_image.asp
 My understanding? - Partial :-(
-- ############################################## */

 /* Container needed to position the button. Adjust the width as needed */
.container {
  position: relative; width: 100%;
}

/* Make the image responsive */
.container img {
  width: 100%; height: 100%;
}

/* Style the button and place it in the middle of the container/image */
.container .btn {
  position: absolute; top: 100%; left: 95%;
  transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%);
  background-color: #555; color: white;
  font-size: 16px; padding: 12px 24px; border: none;
  cursor: pointer; border-radius: 5px;
}

.container .btn:hover {
  background-color: LightBlue;
}
 
/* ############################################## --
 Code for buttons on an image. END.
-- ############################################## */
